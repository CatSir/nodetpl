{"name":"Nodetpl","tagline":"A Javascript Template Engine.","body":"# Read me\r\n\r\n  Fast, easy use javascript template engine based on [node.js](http://nodejs.org).\r\n\r\n```js\r\nvar nodetpl = require('nodetpl');\r\n\r\nvar output, input;\r\ninput = '<?if(true){?>Now is <?=new Date()?>.<?}?>';\r\noutput = nodetpl.precompile(input);\r\n\r\nconsole.log(nodetpl.templete('/hello-world.js', output);\r\n```\r\n\r\n## Installation\r\n\r\n    $ npm install nodetpl\r\n\r\n## method\r\n\r\n  * precompile(tpl)\r\n  * templete(path, tpl)\r\n  * tplcompile(html[, data])\r\n\r\n## Quick start\r\n\r\n```js\r\nvar nodetpl = require('nodetpl');\r\n\r\nvar output, input;\r\ninput = '<?if(@username){?>' +\r\n          '<p>Hello <?=@username?>, now is <?=new Date()?>.</p>' +\r\n        '<?}?>';\r\noutput = nodetpl.tplcompile(input, {\r\n  username: \"Tom\"\r\n});\r\nconsole.log(output);\r\n```\r\n\r\nIt will output this log:\r\n```\r\n<p>Hello Tom, now is Wed Jun 18 2014 11:57:23.</p>\r\n```\r\n\r\n## In Browser\r\n```\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n<title></title>\r\n<script type=\"text/javascript\" src=\"../nodetpl.client.js\"></script>\r\n</head>\r\n<body>\r\n<script id=\"clientcode\" type=\"text/nodetpl\">\r\n<p>Hello, <?=@user?>.</p>\r\n<ul>\r\n  <?for(var i=0; i<@favor.length; i++){?>\r\n    <li><?=@favor[i]?></li>\r\n  <?}?>\r\n</ul>\r\n</script>\r\n<div id=\"clienthtml\">\r\n\r\n</div>\r\n<script type=\"text/javascript\">\r\nvar code = document.getElementById('clientcode');\r\nvar html = document.getElementById('clienthtml');\r\nvar data = {\r\n  \"user\": \"Tom\",\r\n  \"favor\": [ \"Apple\", \"Orange\", \"Bananer\" ]\r\n};\r\nNodeTpl.render(code.innerHTML, data, function(d){\r\n  html.innerHTML = d;\r\n});\r\n</script>\r\n</body>\r\n</html>\r\n```\r\nThe result is:\r\n\r\nHello, Tom.\r\n  * Apple\r\n  * Orange\r\n  * Bananer\r\n\r\n## Local compile demo\r\n### Write a nodetpl template file\r\n```html\r\n<style>\r\n{width:500px;}\r\n.title{font-size:14px;}\r\n.content{border: 1px solid #ccc;padding:10px;}\r\n.content a{text-decoration:underline;}\r\n</style>\r\n<div id=\"$ROOT\">\r\n  <div class=\"title\">This is a test.</div>\r\n  <div class=\"content\">\r\n    Welcome back, this is my first <a href=\"https://github.com/pillys/nodetpl\">nodetpl</a> template\r\n  </div>\r\n</div>\r\n<script>\r\n$ROOT.find('.title').css({\r\n  \"font-weight\": \"bold\"\r\n});\r\n</script>\r\n```\r\nSave it as tpls/hello-world.tpl\r\n\r\n### Compile tpl file with node\r\n```js\r\nvar fs = require('fs'),\r\n    path = require('path'),\r\n    nodetpl = require('nodetpl');\r\n\r\nvar tplpath = __dirname + '/tpls/hello-world.tpl',\r\n    jspath = tplpath.replace('.tpl', '.js');\r\nfs.readFile(tplpath, \"utf-8\", function (err, text) {\r\n  var nspath = jspath.replace(__dirname + '/tpls', '').replace(/\\\\/g, '/');\r\n  !err && fs.writeFile(jspath, nodetpl.templete(nspath, nodetpl.precompile(text)), 'utf-8');\r\n});\r\n```\r\n\r\nSave it as test.js, then run it with node, it will auto create a hello-wold.js in dir tpls/:\r\n\r\n```js\r\n(function(N, undefined){\r\n  var PATH = '/hello-world.js';\r\n  if(!N || !N._tpls) return false;\r\n  N._tpls[PATH] = N._tpls[PATH] ||\r\n{\r\n  \"main\": function($DATA, guid){\r\n    var css = '', dguid = N.dguid();\r\n    var template = {\r\n      init: function(){\r\n        this.v8 = !!''.trim;\r\n        this.result = this.v8 ? '' : [];\r\n      },\r\n      push: function(str){\r\n        this.v8 ? (this.result += str) : this.result.push(str);\r\n      },\r\n      html: function(){\r\n        return this.v8 ? this.result : this.result.join('');\r\n      }\r\n    };\r\n    guid = guid || N.guid();\r\n    template.init();\r\n    css += '#' + guid + '{width:500px;}';\r\n    css += '#' + guid + ' .title{font-size:14px;}';\r\n    css += '#' + guid + ' .content{border: 1px solid #ccc;padding:10px;}';\r\n    css += '#' + guid + ' .content a{text-decoration:underline;}';\r\n    if(N.ie6){\r\n      N._fixcss(css);\r\n    } else {\r\n      template.push('<style>' + css + '</style>');\r\n    }\r\n    template.push('<div id=\"'+ guid +'\">\\n  <div class=\"title\">This is a test.</div>\\n  <div class=\"content\">\\n    Welcome back, this is my first <a href=\"https://github.com/pillys/nodetpl\">nodetpl</a> template\\n  </div>\\n</div>');\r\n    template.push('<script>');\r\n    template.push('(function(window, document, undefined){\\n');\r\n    template.push('  var $ROOT = $(\"#'+ guid +'\");\\n');\r\n    template.push('  var $TPLS = NodeTpl._tpls[\"'+ PATH +'\"];\\n');\r\n    template.push('  var $DATA = NodeTpl._data[\"'+ dguid +'\"];\\n');\r\n    template.push('$ROOT.find(\\'.title\\').css({\\n');\r\n    template.push('  \"font-weight\": \"bold\"\\n');\r\n    template.push('});\\n');\r\n    template.push('})(window, document);\\n');\r\n    template.push('delete NodeTpl._data[\"'+ dguid +'\"];\\n');\r\n    template.push('</script>\\n');\r\n    $DATA && (N._data[dguid] = $DATA);\r\n    return template.html();\r\n  }\r\n};\r\n})(window.NodeTpl);\r\n```\r\n\r\n### Used for Express.js\r\n```js\r\napp.set('view engine', 'tpl');\r\napp.set('views', __dirname + '/views');\r\napp.engine('tpl', require('nodetpl').express.render);\r\n\r\napp.get('/', function(req, res){\r\n  res.render('index', {\r\n    \"user\": \"Tom\",\r\n    \"favor\": [ \"Apple\", \"Orange\", \"Bananer\" ]\r\n  }, function(err, html){\r\n    res.writeHead(200, { \"Content-Type\": \"text/html\" });\r\n    res.end(html);\r\n  });\r\n});\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}